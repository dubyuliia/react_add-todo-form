{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","error","trim","action","method","event","preventDefault","completed","className","htmlFor","type","placeholder","value","onChange","target","disabled","map","UserInfo","href","TodoInfo","TodoList","todos","initialTodos","todo","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9531ca54.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../components/types/user';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\nimport { Todo } from '../types/todo';\nimport { User } from '../types/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const error = !title.trim() || !userId;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserIDChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setUserIdError(!userId);\n\n    if (error) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-title\">Title: </label>\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {titleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-user-id\">User: </label>\n\n        <select\n          id=\"todo-user-id\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIDChange}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n\n          {usersFromServer.map(({ id, name }: User) => (\n            <option value={id} key={id}>\n              {name}\n            </option>\n          ))}\n        </select>\n\n        {userIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email ? user.email : ''}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { User } from '../types/user';\n\ntype Props = {\n  title: string;\n  completed: boolean;\n  user: User | null;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  title,\n  completed = false,\n  user,\n}) => {\n  return (\n    <article data-id=\"1\" className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(({\n      id,\n      user,\n      completed,\n      title,\n    }: Todo) => (\n      <TodoInfo\n        key={id}\n        user={user}\n        completed={completed}\n        title={title}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types/todo';\nimport { getUserById } from './services/user';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}